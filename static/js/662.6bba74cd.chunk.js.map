{"version":3,"file":"static/js/662.6bba74cd.chunk.js","mappings":"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","sources":["../node_modules/@jitl/quickjs-wasmfile-release-asyncify/src/ffi.ts"],"sourcesContent":["// This file generated by \"generate.ts ffi\" in the root of the repo.\nimport {\n  QuickJSAsyncEmscriptenModule,\n  JSRuntimePointer,\n  JSContextPointer,\n  JSContextPointerPointer,\n  JSModuleDefPointer,\n  JSValuePointer,\n  JSValueConstPointer,\n  JSValuePointerPointer,\n  JSValueConstPointerPointer,\n  QTS_C_To_HostCallbackFuncPointer,\n  QTS_C_To_HostInterruptFuncPointer,\n  QTS_C_To_HostLoadModuleFuncPointer,\n  BorrowedHeapCharPointer,\n  OwnedHeapCharPointer,\n  JSBorrowedCharPointer,\n  JSVoidPointer,\n  EvalFlags,\n  IntrinsicsFlags,\n  EvalDetectModule,\n  JSPromiseStateEnum,\n  assertSync,\n} from \"@jitl/quickjs-ffi-types\"\n\n/**\n * Low-level FFI bindings to QuickJS's Emscripten module.\n * See instead {@link QuickJSContext}, the public Javascript interface exposed by this\n * library.\n *\n * @unstable The FFI interface is considered private and may change.\n */\nexport class QuickJSAsyncFFI {\n  constructor(private module: QuickJSAsyncEmscriptenModule) {}\n  /** Set at compile time. */\n  readonly DEBUG = false\n\n  QTS_Throw: (\n    ctx: JSContextPointer,\n    error: JSValuePointer | JSValueConstPointer,\n  ) => JSValuePointer = this.module.cwrap(\"QTS_Throw\", \"number\", [\"number\", \"number\"])\n\n  QTS_NewError: (ctx: JSContextPointer) => JSValuePointer = this.module.cwrap(\n    \"QTS_NewError\",\n    \"number\",\n    [\"number\"],\n  )\n\n  QTS_RuntimeSetMemoryLimit: (rt: JSRuntimePointer, limit: number) => void = this.module.cwrap(\n    \"QTS_RuntimeSetMemoryLimit\",\n    null,\n    [\"number\", \"number\"],\n  )\n\n  QTS_RuntimeComputeMemoryUsage: (rt: JSRuntimePointer, ctx: JSContextPointer) => JSValuePointer =\n    this.module.cwrap(\"QTS_RuntimeComputeMemoryUsage\", \"number\", [\"number\", \"number\"])\n\n  QTS_RuntimeDumpMemoryUsage: (rt: JSRuntimePointer) => OwnedHeapCharPointer = this.module.cwrap(\n    \"QTS_RuntimeDumpMemoryUsage\",\n    \"number\",\n    [\"number\"],\n  )\n\n  QTS_RecoverableLeakCheck: () => number = this.module.cwrap(\n    \"QTS_RecoverableLeakCheck\",\n    \"number\",\n    [],\n  )\n\n  QTS_BuildIsSanitizeLeak: () => number = this.module.cwrap(\"QTS_BuildIsSanitizeLeak\", \"number\", [])\n\n  QTS_RuntimeSetMaxStackSize: (rt: JSRuntimePointer, stack_size: number) => void =\n    this.module.cwrap(\"QTS_RuntimeSetMaxStackSize\", null, [\"number\", \"number\"])\n\n  QTS_GetUndefined: () => JSValueConstPointer = this.module.cwrap(\"QTS_GetUndefined\", \"number\", [])\n\n  QTS_GetNull: () => JSValueConstPointer = this.module.cwrap(\"QTS_GetNull\", \"number\", [])\n\n  QTS_GetFalse: () => JSValueConstPointer = this.module.cwrap(\"QTS_GetFalse\", \"number\", [])\n\n  QTS_GetTrue: () => JSValueConstPointer = this.module.cwrap(\"QTS_GetTrue\", \"number\", [])\n\n  QTS_NewRuntime: () => JSRuntimePointer = this.module.cwrap(\"QTS_NewRuntime\", \"number\", [])\n\n  QTS_FreeRuntime: (rt: JSRuntimePointer) => void = this.module.cwrap(\"QTS_FreeRuntime\", null, [\n    \"number\",\n  ])\n\n  QTS_NewContext: (rt: JSRuntimePointer, intrinsics: IntrinsicsFlags) => JSContextPointer =\n    this.module.cwrap(\"QTS_NewContext\", \"number\", [\"number\", \"number\"])\n\n  QTS_FreeContext: (ctx: JSContextPointer) => void = this.module.cwrap(\"QTS_FreeContext\", null, [\n    \"number\",\n  ])\n\n  QTS_FreeValuePointer: (ctx: JSContextPointer, value: JSValuePointer) => void = this.module.cwrap(\n    \"QTS_FreeValuePointer\",\n    null,\n    [\"number\", \"number\"],\n  )\n\n  QTS_FreeValuePointerRuntime: (rt: JSRuntimePointer, value: JSValuePointer) => void =\n    this.module.cwrap(\"QTS_FreeValuePointerRuntime\", null, [\"number\", \"number\"])\n\n  QTS_FreeVoidPointer: (ctx: JSContextPointer, ptr: JSVoidPointer) => void = this.module.cwrap(\n    \"QTS_FreeVoidPointer\",\n    null,\n    [\"number\", \"number\"],\n  )\n\n  QTS_FreeCString: (ctx: JSContextPointer, str: JSBorrowedCharPointer) => void = this.module.cwrap(\n    \"QTS_FreeCString\",\n    null,\n    [\"number\", \"number\"],\n  )\n\n  QTS_DupValuePointer: (\n    ctx: JSContextPointer,\n    val: JSValuePointer | JSValueConstPointer,\n  ) => JSValuePointer = this.module.cwrap(\"QTS_DupValuePointer\", \"number\", [\"number\", \"number\"])\n\n  QTS_NewObject: (ctx: JSContextPointer) => JSValuePointer = this.module.cwrap(\n    \"QTS_NewObject\",\n    \"number\",\n    [\"number\"],\n  )\n\n  QTS_NewObjectProto: (\n    ctx: JSContextPointer,\n    proto: JSValuePointer | JSValueConstPointer,\n  ) => JSValuePointer = this.module.cwrap(\"QTS_NewObjectProto\", \"number\", [\"number\", \"number\"])\n\n  QTS_NewArray: (ctx: JSContextPointer) => JSValuePointer = this.module.cwrap(\n    \"QTS_NewArray\",\n    \"number\",\n    [\"number\"],\n  )\n\n  QTS_NewArrayBuffer: (\n    ctx: JSContextPointer,\n    buffer: JSVoidPointer,\n    length: number,\n  ) => JSValuePointer = this.module.cwrap(\"QTS_NewArrayBuffer\", \"number\", [\n    \"number\",\n    \"number\",\n    \"number\",\n  ])\n\n  QTS_NewFloat64: (ctx: JSContextPointer, num: number) => JSValuePointer = this.module.cwrap(\n    \"QTS_NewFloat64\",\n    \"number\",\n    [\"number\", \"number\"],\n  )\n\n  QTS_GetFloat64: (ctx: JSContextPointer, value: JSValuePointer | JSValueConstPointer) => number =\n    this.module.cwrap(\"QTS_GetFloat64\", \"number\", [\"number\", \"number\"])\n\n  QTS_NewString: (ctx: JSContextPointer, string: BorrowedHeapCharPointer) => JSValuePointer =\n    this.module.cwrap(\"QTS_NewString\", \"number\", [\"number\", \"number\"])\n\n  QTS_GetString: (\n    ctx: JSContextPointer,\n    value: JSValuePointer | JSValueConstPointer,\n  ) => JSBorrowedCharPointer = this.module.cwrap(\"QTS_GetString\", \"number\", [\"number\", \"number\"])\n\n  QTS_GetArrayBuffer: (\n    ctx: JSContextPointer,\n    data: JSValuePointer | JSValueConstPointer,\n  ) => JSVoidPointer = this.module.cwrap(\"QTS_GetArrayBuffer\", \"number\", [\"number\", \"number\"])\n\n  QTS_GetArrayBufferLength: (\n    ctx: JSContextPointer,\n    data: JSValuePointer | JSValueConstPointer,\n  ) => number = this.module.cwrap(\"QTS_GetArrayBufferLength\", \"number\", [\"number\", \"number\"])\n\n  QTS_NewSymbol: (\n    ctx: JSContextPointer,\n    description: BorrowedHeapCharPointer,\n    isGlobal: number,\n  ) => JSValuePointer = this.module.cwrap(\"QTS_NewSymbol\", \"number\", [\"number\", \"number\", \"number\"])\n\n  QTS_GetSymbolDescriptionOrKey: (\n    ctx: JSContextPointer,\n    value: JSValuePointer | JSValueConstPointer,\n  ) => JSBorrowedCharPointer = assertSync(\n    this.module.cwrap(\"QTS_GetSymbolDescriptionOrKey\", \"number\", [\"number\", \"number\"]),\n  )\n\n  QTS_GetSymbolDescriptionOrKey_MaybeAsync: (\n    ctx: JSContextPointer,\n    value: JSValuePointer | JSValueConstPointer,\n  ) => JSBorrowedCharPointer | Promise<JSBorrowedCharPointer> = this.module.cwrap(\n    \"QTS_GetSymbolDescriptionOrKey\",\n    \"number\",\n    [\"number\", \"number\"],\n  )\n\n  QTS_IsGlobalSymbol: (\n    ctx: JSContextPointer,\n    value: JSValuePointer | JSValueConstPointer,\n  ) => number = this.module.cwrap(\"QTS_IsGlobalSymbol\", \"number\", [\"number\", \"number\"])\n\n  QTS_IsJobPending: (rt: JSRuntimePointer) => number = this.module.cwrap(\n    \"QTS_IsJobPending\",\n    \"number\",\n    [\"number\"],\n  )\n\n  QTS_ExecutePendingJob: (\n    rt: JSRuntimePointer,\n    maxJobsToExecute: number,\n    lastJobContext: JSContextPointerPointer,\n  ) => JSValuePointer = assertSync(\n    this.module.cwrap(\"QTS_ExecutePendingJob\", \"number\", [\"number\", \"number\", \"number\"]),\n  )\n\n  QTS_ExecutePendingJob_MaybeAsync: (\n    rt: JSRuntimePointer,\n    maxJobsToExecute: number,\n    lastJobContext: JSContextPointerPointer,\n  ) => JSValuePointer | Promise<JSValuePointer> = this.module.cwrap(\n    \"QTS_ExecutePendingJob\",\n    \"number\",\n    [\"number\", \"number\", \"number\"],\n  )\n\n  QTS_GetProp: (\n    ctx: JSContextPointer,\n    this_val: JSValuePointer | JSValueConstPointer,\n    prop_name: JSValuePointer | JSValueConstPointer,\n  ) => JSValuePointer = assertSync(\n    this.module.cwrap(\"QTS_GetProp\", \"number\", [\"number\", \"number\", \"number\"]),\n  )\n\n  QTS_GetProp_MaybeAsync: (\n    ctx: JSContextPointer,\n    this_val: JSValuePointer | JSValueConstPointer,\n    prop_name: JSValuePointer | JSValueConstPointer,\n  ) => JSValuePointer | Promise<JSValuePointer> = this.module.cwrap(\"QTS_GetProp\", \"number\", [\n    \"number\",\n    \"number\",\n    \"number\",\n  ])\n\n  QTS_SetProp: (\n    ctx: JSContextPointer,\n    this_val: JSValuePointer | JSValueConstPointer,\n    prop_name: JSValuePointer | JSValueConstPointer,\n    prop_value: JSValuePointer | JSValueConstPointer,\n  ) => void = assertSync(\n    this.module.cwrap(\"QTS_SetProp\", null, [\"number\", \"number\", \"number\", \"number\"]),\n  )\n\n  QTS_SetProp_MaybeAsync: (\n    ctx: JSContextPointer,\n    this_val: JSValuePointer | JSValueConstPointer,\n    prop_name: JSValuePointer | JSValueConstPointer,\n    prop_value: JSValuePointer | JSValueConstPointer,\n  ) => void | Promise<void> = this.module.cwrap(\"QTS_SetProp\", null, [\n    \"number\",\n    \"number\",\n    \"number\",\n    \"number\",\n  ])\n\n  QTS_DefineProp: (\n    ctx: JSContextPointer,\n    this_val: JSValuePointer | JSValueConstPointer,\n    prop_name: JSValuePointer | JSValueConstPointer,\n    prop_value: JSValuePointer | JSValueConstPointer,\n    get: JSValuePointer | JSValueConstPointer,\n    set: JSValuePointer | JSValueConstPointer,\n    configurable: boolean,\n    enumerable: boolean,\n    has_value: boolean,\n  ) => void = this.module.cwrap(\"QTS_DefineProp\", null, [\n    \"number\",\n    \"number\",\n    \"number\",\n    \"number\",\n    \"number\",\n    \"number\",\n    \"boolean\",\n    \"boolean\",\n    \"boolean\",\n  ])\n\n  QTS_Call: (\n    ctx: JSContextPointer,\n    func_obj: JSValuePointer | JSValueConstPointer,\n    this_obj: JSValuePointer | JSValueConstPointer,\n    argc: number,\n    argv_ptrs: JSValueConstPointerPointer,\n  ) => JSValuePointer = assertSync(\n    this.module.cwrap(\"QTS_Call\", \"number\", [\"number\", \"number\", \"number\", \"number\", \"number\"]),\n  )\n\n  QTS_Call_MaybeAsync: (\n    ctx: JSContextPointer,\n    func_obj: JSValuePointer | JSValueConstPointer,\n    this_obj: JSValuePointer | JSValueConstPointer,\n    argc: number,\n    argv_ptrs: JSValueConstPointerPointer,\n  ) => JSValuePointer | Promise<JSValuePointer> = this.module.cwrap(\"QTS_Call\", \"number\", [\n    \"number\",\n    \"number\",\n    \"number\",\n    \"number\",\n    \"number\",\n  ])\n\n  QTS_ResolveException: (ctx: JSContextPointer, maybe_exception: JSValuePointer) => JSValuePointer =\n    this.module.cwrap(\"QTS_ResolveException\", \"number\", [\"number\", \"number\"])\n\n  QTS_Dump: (\n    ctx: JSContextPointer,\n    obj: JSValuePointer | JSValueConstPointer,\n  ) => JSBorrowedCharPointer = assertSync(\n    this.module.cwrap(\"QTS_Dump\", \"number\", [\"number\", \"number\"]),\n  )\n\n  QTS_Dump_MaybeAsync: (\n    ctx: JSContextPointer,\n    obj: JSValuePointer | JSValueConstPointer,\n  ) => JSBorrowedCharPointer | Promise<JSBorrowedCharPointer> = this.module.cwrap(\n    \"QTS_Dump\",\n    \"number\",\n    [\"number\", \"number\"],\n  )\n\n  QTS_Eval: (\n    ctx: JSContextPointer,\n    js_code: BorrowedHeapCharPointer,\n    js_code_length: number,\n    filename: string,\n    detectModule: EvalDetectModule,\n    evalFlags: EvalFlags,\n  ) => JSValuePointer = assertSync(\n    this.module.cwrap(\"QTS_Eval\", \"number\", [\n      \"number\",\n      \"number\",\n      \"number\",\n      \"string\",\n      \"number\",\n      \"number\",\n    ]),\n  )\n\n  QTS_Eval_MaybeAsync: (\n    ctx: JSContextPointer,\n    js_code: BorrowedHeapCharPointer,\n    js_code_length: number,\n    filename: string,\n    detectModule: EvalDetectModule,\n    evalFlags: EvalFlags,\n  ) => JSValuePointer | Promise<JSValuePointer> = this.module.cwrap(\"QTS_Eval\", \"number\", [\n    \"number\",\n    \"number\",\n    \"number\",\n    \"string\",\n    \"number\",\n    \"number\",\n  ])\n\n  QTS_GetModuleNamespace: (\n    ctx: JSContextPointer,\n    module_func_obj: JSValuePointer | JSValueConstPointer,\n  ) => JSValuePointer = this.module.cwrap(\"QTS_GetModuleNamespace\", \"number\", [\"number\", \"number\"])\n\n  QTS_Typeof: (\n    ctx: JSContextPointer,\n    value: JSValuePointer | JSValueConstPointer,\n  ) => OwnedHeapCharPointer = this.module.cwrap(\"QTS_Typeof\", \"number\", [\"number\", \"number\"])\n\n  QTS_GetGlobalObject: (ctx: JSContextPointer) => JSValuePointer = this.module.cwrap(\n    \"QTS_GetGlobalObject\",\n    \"number\",\n    [\"number\"],\n  )\n\n  QTS_NewPromiseCapability: (\n    ctx: JSContextPointer,\n    resolve_funcs_out: JSValuePointerPointer,\n  ) => JSValuePointer = this.module.cwrap(\"QTS_NewPromiseCapability\", \"number\", [\n    \"number\",\n    \"number\",\n  ])\n\n  QTS_PromiseState: (\n    ctx: JSContextPointer,\n    promise: JSValuePointer | JSValueConstPointer,\n  ) => JSPromiseStateEnum = this.module.cwrap(\"QTS_PromiseState\", \"number\", [\"number\", \"number\"])\n\n  QTS_PromiseResult: (\n    ctx: JSContextPointer,\n    promise: JSValuePointer | JSValueConstPointer,\n  ) => JSValuePointer = this.module.cwrap(\"QTS_PromiseResult\", \"number\", [\"number\", \"number\"])\n\n  QTS_TestStringArg: (string: string) => void = this.module.cwrap(\"QTS_TestStringArg\", null, [\n    \"string\",\n  ])\n\n  QTS_BuildIsDebug: () => number = this.module.cwrap(\"QTS_BuildIsDebug\", \"number\", [])\n\n  QTS_BuildIsAsyncify: () => number = this.module.cwrap(\"QTS_BuildIsAsyncify\", \"number\", [])\n\n  QTS_NewFunction: (ctx: JSContextPointer, func_id: number, name: string) => JSValuePointer =\n    this.module.cwrap(\"QTS_NewFunction\", \"number\", [\"number\", \"number\", \"string\"])\n\n  QTS_ArgvGetJSValueConstPointer: (\n    argv: JSValuePointer | JSValueConstPointer,\n    index: number,\n  ) => JSValueConstPointer = this.module.cwrap(\"QTS_ArgvGetJSValueConstPointer\", \"number\", [\n    \"number\",\n    \"number\",\n  ])\n\n  QTS_RuntimeEnableInterruptHandler: (rt: JSRuntimePointer) => void = this.module.cwrap(\n    \"QTS_RuntimeEnableInterruptHandler\",\n    null,\n    [\"number\"],\n  )\n\n  QTS_RuntimeDisableInterruptHandler: (rt: JSRuntimePointer) => void = this.module.cwrap(\n    \"QTS_RuntimeDisableInterruptHandler\",\n    null,\n    [\"number\"],\n  )\n\n  QTS_RuntimeEnableModuleLoader: (rt: JSRuntimePointer, use_custom_normalize: number) => void =\n    this.module.cwrap(\"QTS_RuntimeEnableModuleLoader\", null, [\"number\", \"number\"])\n\n  QTS_RuntimeDisableModuleLoader: (rt: JSRuntimePointer) => void = this.module.cwrap(\n    \"QTS_RuntimeDisableModuleLoader\",\n    null,\n    [\"number\"],\n  )\n\n  QTS_bjson_encode: (\n    ctx: JSContextPointer,\n    val: JSValuePointer | JSValueConstPointer,\n  ) => JSValuePointer = this.module.cwrap(\"QTS_bjson_encode\", \"number\", [\"number\", \"number\"])\n\n  QTS_bjson_decode: (\n    ctx: JSContextPointer,\n    data: JSValuePointer | JSValueConstPointer,\n  ) => JSValuePointer = this.module.cwrap(\"QTS_bjson_decode\", \"number\", [\"number\", \"number\"])\n}\n"],"names":["r","constructor","n","module","DEBUG","QTS_Throw","this","cwrap","QTS_NewError","QTS_RuntimeSetMemoryLimit","QTS_RuntimeComputeMemoryUsage","QTS_RuntimeDumpMemoryUsage","QTS_RecoverableLeakCheck","QTS_BuildIsSanitizeLeak","QTS_RuntimeSetMaxStackSize","QTS_GetUndefined","QTS_GetNull","QTS_GetFalse","QTS_GetTrue","QTS_NewRuntime","QTS_FreeRuntime","QTS_NewContext","QTS_FreeContext","QTS_FreeValuePointer","QTS_FreeValuePointerRuntime","QTS_FreeVoidPointer","QTS_FreeCString","QTS_DupValuePointer","QTS_NewObject","QTS_NewObjectProto","QTS_NewArray","QTS_NewArrayBuffer","QTS_NewFloat64","QTS_GetFloat64","QTS_NewString","QTS_GetString","QTS_GetArrayBuffer","QTS_GetArrayBufferLength","QTS_NewSymbol","QTS_GetSymbolDescriptionOrKey","e","QTS_GetSymbolDescriptionOrKey_MaybeAsync","QTS_IsGlobalSymbol","QTS_IsJobPending","QTS_ExecutePendingJob","QTS_ExecutePendingJob_MaybeAsync","QTS_GetProp","QTS_GetProp_MaybeAsync","QTS_SetProp","QTS_SetProp_MaybeAsync","QTS_DefineProp","QTS_Call","QTS_Call_MaybeAsync","QTS_ResolveException","QTS_Dump","QTS_Dump_MaybeAsync","QTS_Eval","QTS_Eval_MaybeAsync","QTS_GetModuleNamespace","QTS_Typeof","QTS_GetGlobalObject","QTS_NewPromiseCapability","QTS_PromiseState","QTS_PromiseResult","QTS_TestStringArg","QTS_BuildIsDebug","QTS_BuildIsAsyncify","QTS_NewFunction","QTS_ArgvGetJSValueConstPointer","QTS_RuntimeEnableInterruptHandler","QTS_RuntimeDisableInterruptHandler","QTS_RuntimeEnableModuleLoader","QTS_RuntimeDisableModuleLoader","QTS_bjson_encode","QTS_bjson_decode"],"sourceRoot":""}